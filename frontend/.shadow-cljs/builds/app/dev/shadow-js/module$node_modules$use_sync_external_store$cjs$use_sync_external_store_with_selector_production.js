["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.js"],"~:js","shadow$provide.module$node_modules$use_sync_external_store$cjs$use_sync_external_store_with_selector_production = function(global, require, module, exports) {\n  function is(x, y) {\n    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;\n  }\n  global = require(\"module$node_modules$react$index\");\n  var objectIs = \"function\" === typeof Object.is ? Object.is : is, useSyncExternalStore = global.useSyncExternalStore, useRef = global.useRef, useEffect = global.useEffect, useMemo = global.useMemo, useDebugValue = global.useDebugValue;\n  exports.useSyncExternalStoreWithSelector = function(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n    var instRef = useRef(null);\n    if (null === instRef.current) {\n      var inst = {hasValue:!1, value:null};\n      instRef.current = inst;\n    } else {\n      inst = instRef.current;\n    }\n    instRef = useMemo(function() {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot)) {\n              return memoizedSelection = currentSelection;\n            }\n          }\n          return memoizedSelection = nextSnapshot;\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) {\n          return currentSelection;\n        }\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection)) {\n          return memoizedSnapshot = nextSnapshot, currentSelection;\n        }\n        memoizedSnapshot = nextSnapshot;\n        return memoizedSelection = nextSelection;\n      }\n      var hasMemo = !1, memoizedSnapshot, memoizedSelection, maybeGetServerSnapshot = void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [function() {\n        return memoizedSelector(getSnapshot());\n      }, null === maybeGetServerSnapshot ? void 0 : function() {\n        return memoizedSelector(maybeGetServerSnapshot());\n      }];\n    }, [getSnapshot, getServerSnapshot, selector, isEqual]);\n    var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n    useEffect(function() {\n      inst.hasValue = !0;\n      inst.value = value;\n    }, [value]);\n    useDebugValue(value);\n    return value;\n  };\n};\n","~:source","shadow$provide[\"module$node_modules$use_sync_external_store$cjs$use_sync_external_store_with_selector_production\"] = function(global,require,module,exports) {\n/**\n * @license React\n * use-sync-external-store-with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = React.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$index","~$shadow.js"]],"~:properties",["^5",["hasValue","value","current","useSyncExternalStoreWithSelector"]],"~:compiled-at",1758839490614,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$use_sync_external_store$cjs$use_sync_external_store_with_selector_production.js\",\n\"lineCount\":56,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$use_sync_external_store$cjs$use_sync_external_store_with_selector_production\\\"] = function(global,require,module,exports) {\\n/**\\n * @license React\\n * use-sync-external-store-with-selector.production.js\\n *\\n * Copyright (c) Meta Platforms, Inc. and affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n\\\"use strict\\\";\\nvar React = require(\\\"react\\\");\\nfunction is(x, y) {\\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\\n}\\nvar objectIs = \\\"function\\\" === typeof Object.is ? Object.is : is,\\n  useSyncExternalStore = React.useSyncExternalStore,\\n  useRef = React.useRef,\\n  useEffect = React.useEffect,\\n  useMemo = React.useMemo,\\n  useDebugValue = React.useDebugValue;\\nexports.useSyncExternalStoreWithSelector = function (\\n  subscribe,\\n  getSnapshot,\\n  getServerSnapshot,\\n  selector,\\n  isEqual\\n) {\\n  var instRef = useRef(null);\\n  if (null === instRef.current) {\\n    var inst = { hasValue: !1, value: null };\\n    instRef.current = inst;\\n  } else inst = instRef.current;\\n  instRef = useMemo(\\n    function () {\\n      function memoizedSelector(nextSnapshot) {\\n        if (!hasMemo) {\\n          hasMemo = !0;\\n          memoizedSnapshot = nextSnapshot;\\n          nextSnapshot = selector(nextSnapshot);\\n          if (void 0 !== isEqual && inst.hasValue) {\\n            var currentSelection = inst.value;\\n            if (isEqual(currentSelection, nextSnapshot))\\n              return (memoizedSelection = currentSelection);\\n          }\\n          return (memoizedSelection = nextSnapshot);\\n        }\\n        currentSelection = memoizedSelection;\\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\\n        var nextSelection = selector(nextSnapshot);\\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\\n        memoizedSnapshot = nextSnapshot;\\n        return (memoizedSelection = nextSelection);\\n      }\\n      var hasMemo = !1,\\n        memoizedSnapshot,\\n        memoizedSelection,\\n        maybeGetServerSnapshot =\\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\\n      return [\\n        function () {\\n          return memoizedSelector(getSnapshot());\\n        },\\n        null === maybeGetServerSnapshot\\n          ? void 0\\n          : function () {\\n              return memoizedSelector(maybeGetServerSnapshot());\\n            }\\n      ];\\n    },\\n    [getSnapshot, getServerSnapshot, selector, isEqual]\\n  );\\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\\n  useEffect(\\n    function () {\\n      inst.hasValue = !0;\\n      inst.value = value;\\n    },\\n    [value]\\n  );\\n  useDebugValue(value);\\n  return value;\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"is\",\"x\",\"y\",\"React\",\"objectIs\",\"Object\",\"useSyncExternalStore\",\"useRef\",\"useEffect\",\"useMemo\",\"useDebugValue\",\"useSyncExternalStoreWithSelector\",\"exports.useSyncExternalStoreWithSelector\",\"subscribe\",\"getSnapshot\",\"getServerSnapshot\",\"selector\",\"isEqual\",\"instRef\",\"current\",\"inst\",\"hasValue\",\"value\",\"memoizedSelector\",\"nextSnapshot\",\"hasMemo\",\"memoizedSnapshot\",\"currentSelection\",\"memoizedSelection\",\"nextSelection\",\"maybeGetServerSnapshot\"]\n}\n"]