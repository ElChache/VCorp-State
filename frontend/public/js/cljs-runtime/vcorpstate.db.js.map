{"version":3,"sources":["vcorpstate/db.cljs"],"mappings":";AAGA,2BAAA,wCAAA,6DAAA,gEAAA,4DAAA,uEAAA,uEAAA,6DAAA,6FAAA,mDAAA,uDAAA,mFAAA,sEAAA,uDAAA,iCAAA,2CAAA,iEAAA,KAAA,kEAAA,MAAA,kFAAA,IAAA,iEAAA,aAAA,2CAAA,kFAAA,cAAA,KAAA,2CAAA,qDAAA,4DAAA,MAAA,KAAA,2CAAA,6DAAA,MAAA,uDAAA,aAAA,KAAA,KAAA,6EAAA,2CAAA,oEAAA,mCAAA,gEAAA,mCAAA,qDAAA,mCAAA,wDAAA,mCAAA,sDAAA,mCAAA,4EAAA,iCAAA,qEAAA,/8EAAKA","names":["vcorpstate.db/default-db"],"sourcesContent":["(ns vcorpstate.db)\n\n;; VCorpState application state schema\n(def default-db\n  {;; Currently selected project ID (integer or nil)\n   :selected-project-id nil\n   \n   ;; List of all available projects from backend\n   :projects []\n   \n   ;; Current view/route (:project-selector or :main)\n   :current-view :project-selector\n   \n   ;; Current route information\n   :current-route {:name :home}\n   \n   ;; Pending route to navigate to after projects are loaded\n   :pending-route nil\n   \n   ;; Loading state for async operations\n   :loading? false\n   \n   ;; Error message (string or nil)\n   :error nil\n   \n   ;; Expanded sidebar section (:agents, :tickets, :documents, or nil)\n   :expanded-sidebar-section nil\n   \n   ;; Project data loaded from backend\n   :data {:collections {}     ;; Keyed by collection-id  \n          :documents {}       ;; Keyed by document-id\n          :jobs {}           ;; Keyed by job-id\n          :squads {}         ;; Keyed by squad-id\n          :roles {}          ;; Keyed by role short-name\n          :graph_structure [] ;; Pre-computed squad columns with root jobs\n          :last-updated nil} ;; Timestamp of last update\n   \n   ;; App-level state\n   :app {:loading? false      ;; Loading state for initial data\n         :error nil}          ;; Error message\n   \n   ;; WebSocket connection\n   :websocket {:connection nil\n               :connected? false\n               :reconnect-attempts 0\n               :last-event nil}\n   \n   ;; Dialog state\n   :dialogs {:launch-agents-open? false}})"]}