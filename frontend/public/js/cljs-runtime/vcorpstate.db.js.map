{"version":3,"sources":["vcorpstate/db.cljs"],"mappings":";AAGA,2BAAA,wCAAA,6DAAA,gEAAA,uEAAA,uEAAA,6DAAA,6FAAA,uDAAA,uDAAA,mFAAA,wEAAA,iCAAA,2CAAA,iEAAA,KAAA,kEAAA,MAAA,kFAAA,IAAA,iEAAA,aAAA,KAAA,2CAAA,qDAAA,4DAAA,MAAA,KAAA,wCAAA,qEAAA,wDAAA,kEAAA,0DAAA,6DAAA,sDAAA,oEAAA,qDAAA,kEAAA,KAAA,mCAAA,MAAA,mCAAA,MAAA,mCAAA,mCAAA,mCAAA,qCAAA,KAAA,KAAA,zlEAAKA","names":["vcorpstate.db/default-db"],"sourcesContent":["(ns vcorpstate.db)\n\n;; VCorpState application state schema\n(def default-db\n  {;; Currently selected project ID (integer or nil)\n   :selected-project-id nil\n   \n   ;; List of all available projects from backend\n   :projects []\n   \n   ;; Current view/route (:project-selector or :main)\n   :current-view :project-selector\n   \n   ;; Current route information\n   :current-route {:name :home}\n   \n   ;; Pending route to navigate to after projects are loaded\n   :pending-route nil\n   \n   ;; Loading state for async operations\n   :loading? false\n   \n   ;; Error message (string or nil)\n   :error nil\n   \n   ;; Expanded sidebar section (:agents, :tickets, :documents, or nil)\n   :expanded-sidebar-section nil\n   \n   ;; Graph data structure (following architecture plan)\n   :graph {:collections {}     ;; Keyed by collection-id  \n           :documents {}       ;; Keyed by document-id\n           :jobs {}           ;; Keyed by job-id\n           :squads {}         ;; For layout columns\n           :roles {}          ;; Role information\n           :layout {}         ;; Node positions and layout data\n           :loading? false    ;; Loading state for initial data\n           :connected? false  ;; WebSocket connection status\n           :last-updated nil} ;; Timestamp of last update\n   \n   ;; WebSocket connection\n   :websocket {:connection nil\n               :connected? false\n               :reconnect-attempts 0\n               :last-event nil}})"]}