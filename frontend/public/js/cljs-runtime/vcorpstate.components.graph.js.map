{"version":3,"sources":["vcorpstate/components/graph.cljs"],"mappings":"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","names":["vcorpstate.components.graph/loading-state","vcorpstate.components.graph/empty-state","vcorpstate.components.graph/connection-status","cljs.core/deref","connected?","re_frame.core.subscribe","vcorpstate.components.graph/graph-component","loading?","has-data?","nodes","cljs.core/not","cljs.core.doall","iter__5480__auto__","s__14802","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__14804","cljs.core/chunk-buffer","i__14803","cljs.core/-nth","map__14805","cljs.core/--destructure-map","cljs.core.get","map__14806","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__14801","cljs.core/chunk-rest","cljs.core/first","map__14807","map__14808","cljs.core/cons","cljs.core/rest","node","id","position","data","x","y","label","type","is-job?","cljs.core._EQ_","bg-color","cljs.core/chunk-first"],"sourcesContent":["(ns vcorpstate.components.graph\n  (:require [reagent.core :as r]\n            [re-frame.core :as rf]))\n\n(defn loading-state\n  []\n  [:div {:class \"flex items-center justify-center h-full\"}\n   [:div {:class \"flex flex-col items-center space-y-4\"}\n    [:div {:class \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"}]\n    [:div {:class \"text-gray-600\"} \"Loading graph...\"]]])\n\n(defn empty-state\n  []\n  [:div {:class \"flex items-center justify-center h-full\"}\n   [:div {:class \"text-center\"}\n    [:div {:class \"text-gray-500 text-lg mb-2\"} \"No graph data available\"]\n    [:div {:class \"text-gray-400\"} \"Select a project to view the pipeline graph\"]]])\n\n(defn connection-status\n  []\n  (let [connected? @(rf/subscribe [:websocket/connected?])]\n    [:div {:class \"absolute top-4 right-4 z-10\"}\n     [:div {:class (str \"flex items-center space-x-2 px-3 py-2 rounded-lg text-sm \"\n                        (if connected? \"bg-green-100 text-green-800\" \"bg-yellow-100 text-yellow-800\"))}\n      [:div {:class (str \"w-2 h-2 rounded-full \" \n                         (if connected? \"bg-green-500\" \"bg-yellow-500\"))}]\n      [:span (if connected? \"Real-time connected\" \"Connecting...\")]]]))\n\n(defn graph-component\n  []\n  (let [loading? @(rf/subscribe [:graph/loading?])\n        has-data? @(rf/subscribe [:graph/has-data?])\n        nodes @(rf/subscribe [:graph/nodes])]\n    \n    [:div {:class \"relative w-full h-full bg-gray-50\"}\n     [connection-status]\n     \n     (cond\n       loading? \n       [loading-state]\n       \n       (not has-data?) \n       [empty-state]\n       \n       :else\n       [:div {:class \"bg-gray-50 overflow-auto\"\n              :style {:width \"1200px\" \n                      :height \"600px\" \n                      :position \"relative\"}}\n        \n        (doall\n         (for [node nodes\n               :let [{:keys [id position data]} node\n                     x (.-x position)\n                     y (.-y position)\n                     {:keys [label type]} data\n                     is-job? (= type :job)\n                     bg-color (if is-job? \"#f59e0b\" \"#3b82f6\")]]\n           \n           [:div {:key (str id \"-\" x \"-\" y)\n                  :class \"border shadow-sm rounded cursor-pointer hover:shadow-md transition-shadow\"\n                  :style {:position \"absolute\"\n                          :left (str x \"px\") \n                          :top (str y \"px\")\n                          :background-color bg-color\n                          :color \"white\"\n                          :padding \"6px 12px\"\n                          :font-size \"12px\"\n                          :font-weight \"500\"\n                          :min-width \"120px\"\n                          :text-align \"center\"}}\n            label]))])]))"]}