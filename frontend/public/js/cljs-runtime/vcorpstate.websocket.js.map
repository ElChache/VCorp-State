{"version":3,"sources":["vcorpstate/websocket.cljs"],"mappings":";AAIA,qCAAA,rCAAKA;AAGL;;;mDAAA,nDAAMC,8GAEHC;AAFH,AAGE,IAAMC,KAAG,KAAAC,UAAeJ;AAAxB,AAGE,CAAM,AAAUG,YACV,WAAKE;AAAL,AACE,YAAA,ZAACC;;AACD,uBAAA,mFAAA,1GAACC,0LAAkCJ;;AAEnC,OAAOA,QAAG,AAACK,eACD,qBAAA,2CAAA,qDAAA,oBAAA,zIAACC,yMACmBP;;;AAGtC,CAAM,AAAaC,eACb,WAAKE;AAAL,AACE,IAAMK,OAAK,AAACC,WAAc,AAAQN;IAC5BO,aAAW,iHAAA,2EAAA,5LAACC,0DAAQH;AAD1B,AAEE,YAAA,ZAACJ,wCAA2CM;;AAC5C,8BAAA,mFAAA,1GAACL,oMAAuCK;;;AAGlD,CAAM,AAAWT,aACX,WAAKE;AAAL,AACE,YAAA,ZAACC;;AACD,8BAAA,mFAAA,1GAACC;;;AAGT,CAAM,AAAWJ,aACX,WAAKE;AAAL,AACE,cAAA,dAACS,iCAAoCT;;AACrC,8BAAA,mFAAA,1GAACE,kLAA8BF;;;AAEvCF;;AAEJ;;;kDAAA,lDAAMY,4GAEHZ;AAFH,AAGE,oBAAMA;AAAN,AACE,OAAQA;;AADV","names":["vcorpstate.websocket/websocket-url","vcorpstate.websocket/create-websocket-connection","project-id","ws","js/WebSocket","event","js/console.log","re-frame.core/dispatch","js/JSON.stringify","cljs.core/clj->js","data","js/JSON.parse","event-data","cljs.core.js__GT_clj","js/console.error","vcorpstate.websocket/close-websocket-connection"],"sourcesContent":["(ns vcorpstate.websocket\n  (:require [re-frame.core :as rf]\n            [clojure.string :as str]))\n\n(def websocket-url \"ws://localhost:3003/ws\")\n\n;; WebSocket connection management\n(defn create-websocket-connection\n  \"Create and configure WebSocket connection\"\n  [project-id]\n  (let [ws (js/WebSocket. websocket-url)]\n    \n    ;; Connection opened\n    (set! (.-onopen ws)\n          (fn [event]\n            (js/console.log \"WebSocket connected\")\n            (rf/dispatch [:websocket/connected ws])\n            ;; Subscribe to project events\n            (.send ws (js/JSON.stringify \n                      (clj->js {:type \"subscribe_project\" \n                               :projectId project-id})))))\n    \n    ;; Message received\n    (set! (.-onmessage ws)\n          (fn [event]\n            (let [data (js/JSON.parse (.-data event))\n                  event-data (js->clj data :keywordize-keys true)]\n              (js/console.log \"WebSocket event received:\" event-data)\n              (rf/dispatch [:websocket/event-received event-data]))))\n    \n    ;; Connection closed\n    (set! (.-onclose ws)\n          (fn [event]\n            (js/console.log \"WebSocket disconnected\")\n            (rf/dispatch [:websocket/disconnected])))\n    \n    ;; Connection error\n    (set! (.-onerror ws)\n          (fn [event]\n            (js/console.error \"WebSocket error:\" event)\n            (rf/dispatch [:websocket/error event])))\n    \n    ws))\n\n(defn close-websocket-connection\n  \"Close WebSocket connection\"\n  [ws]\n  (when ws\n    (.close ws)))"]}