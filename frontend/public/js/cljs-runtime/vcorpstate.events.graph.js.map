{"version":3,"sources":["vcorpstate/events/graph.cljs"],"mappings":"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","names":["re_frame.core.reg_event_fx","p__11304","p__11305","map__11306","cljs.core/--destructure-map","cljs.core.get","vec__11307","cljs.core.nth","db","_","project-id","cljs.core/assoc-in","p__11310","vec__11311","vcorpstate.http/load-project-initial-data","re_frame.core.reg_event_db","p__11314","vec__11315","data","map__11318","collections","documents","jobs","squads","roles","timestamp","collections-by-id","cljs.core.into","cljs.core.map","c","documents-by-id","d","jobs-by-id","j","squads-by-id","s","roles-by-short-name","r","p__11325","vec__11326","error","cljs.core.assoc","p__11329","vec__11330","event","map__11333","document_id","new_status","old_status","p__11335","vec__11336","map__11339","job_id","completed","paused","p__11340","vec__11341","map__11344","collection_id","total","p__11345","vec__11346","map__11349","document","p__11350","p__11351","map__11352","vec__11353","collection-id","vcorpstate.http/load-collection-details","p__11356","vec__11357","details","p__11360","p__11361","map__11366","vec__11367","job-id","vcorpstate.http/load-job-details","p__11370","vec__11371"],"sourcesContent":["(ns vcorpstate.events.graph\n  \"Graph-related events\"\n  (:require [re-frame.core :as rf]\n            [vcorpstate.http :as http]))\n\n;; ====================================\n;; GRAPH DATA EVENTS\n;; ====================================\n\n;; Load initial graph data for project\n(rf/reg-event-fx\n :graph/load-initial-data\n (fn [{:keys [db]} [_ project-id]]\n   {:db (assoc-in db [:graph :loading?] true)\n    :dispatch-later [{:ms 100 :dispatch [:http/load-project-data project-id]}]}))\n\n;; HTTP call to load project data\n(rf/reg-event-fx\n :http/load-project-data\n (fn [_ [_ project-id]]\n   (http/load-project-initial-data project-id)\n   {}))\n\n;; Handle successful initial data load\n(rf/reg-event-db\n :graph/initial-data-loaded\n (fn [db [_ data]]\n   (let [{:keys [collections documents jobs squads roles timestamp]} data\n         ;; Normalize data by ID for fast lookups\n         collections-by-id (into {} (map (fn [c] [(:id c) c])) collections)\n         documents-by-id (into {} (map (fn [d] [(:id d) d])) documents) \n         jobs-by-id (into {} (map (fn [j] [(:id j) j])) jobs)\n         squads-by-id (into {} (map (fn [s] [(:id s) s])) squads)\n         roles-by-short-name (into {} (map (fn [r] [(:short_name r) r])) roles)]\n     (-> db\n         (assoc-in [:graph :collections] collections-by-id)\n         (assoc-in [:graph :documents] documents-by-id)\n         (assoc-in [:graph :jobs] jobs-by-id)\n         (assoc-in [:graph :squads] squads-by-id)\n         (assoc-in [:graph :roles] roles-by-short-name)\n         (assoc-in [:graph :loading?] false)\n         (assoc-in [:graph :last-updated] timestamp)))))\n\n;; Handle failed initial data load\n(rf/reg-event-db\n :graph/initial-data-failed\n (fn [db [_ error]]\n   (-> db\n       (assoc-in [:graph :loading?] false)\n       (assoc :error \"Failed to load graph data\"))))\n\n;; ====================================\n;; REAL-TIME GRAPH UPDATES\n;; ====================================\n\n;; Handle document status changes\n(rf/reg-event-db\n :graph/document-status-changed\n (fn [db [_ event]]\n   (let [{:keys [document_id new_status old_status]} event]\n     (assoc-in db [:graph :documents document_id :status] new_status))))\n\n;; Handle job status changes\n(rf/reg-event-db\n :graph/job-status-changed\n (fn [db [_ event]]\n   (let [{:keys [job_id completed paused]} event]\n     (-> db\n         (assoc-in [:graph :jobs job_id :completed] completed)\n         (assoc-in [:graph :jobs job_id :paused] paused)))))\n\n;; Handle collection progress updates\n(rf/reg-event-db\n :graph/collection-progress-updated\n (fn [db [_ event]]\n   (let [{:keys [collection_id completed total]} event]\n     ;; Update could trigger recalculation of collection status\n     (assoc-in db [:graph :collections collection_id :progress] \n               {:completed completed :total total}))))\n\n;; Handle new document creation\n(rf/reg-event-db\n :graph/document-created\n (fn [db [_ event]]\n   (let [{:keys [document]} event]\n     (assoc-in db [:graph :documents (:id document)] document))))\n\n;; ====================================\n;; COLLECTION & JOB DETAILS\n;; ====================================\n\n;; Show collection details modal\n(rf/reg-event-fx\n :collection/show-details\n (fn [{:keys [db]} [_ collection-id]]\n   (http/load-collection-details collection-id)\n   {:db (assoc-in db [:ui :selected-collection-id] collection-id)}))\n\n;; Handle collection details loaded\n(rf/reg-event-db\n :collection/details-loaded\n (fn [db [_ collection-id details]]\n   (assoc-in db [:ui :collection-details] details)))\n\n;; Show job details modal\n(rf/reg-event-fx\n :job/show-details\n (fn [{:keys [db]} [_ job-id]]\n   (http/load-job-details job-id)\n   {:db (assoc-in db [:ui :selected-job-id] job-id)}))\n\n;; Handle job details loaded\n(rf/reg-event-db\n :job/details-loaded\n (fn [db [_ job-id details]]\n   (assoc-in db [:ui :job-details] details)))"]}